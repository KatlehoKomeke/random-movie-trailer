type Content @aws_api_key
@aws_cognito_user_pools(cognito_groups: ["User"]) {
	title: String!
	link: String!
}

type Contents @aws_api_key
@aws_cognito_user_pools(cognito_groups: ["User"]) {
	page: Int
	results: [Result]
	total_pages: Int
	total_results: Int
}

type Result @aws_api_key
@aws_cognito_user_pools(cognito_groups: ["User"]) {
	adult: Boolean
	backdrop_path: String
	genre_ids: [Int]
	id: Int
	original_language: String
	original_title: String
	overview: String
	popularity: Float
	poster_path: String
	release_date: String
	title: String
	video: Boolean
	vote_average: Float
	vote_count: Int
}

type GetWatchlistResponse @aws_api_key
@aws_cognito_user_pools(cognito_groups: ["User"]){
	watchlist: [Int]
}

type Query @aws_api_key
@aws_cognito_user_pools(cognito_groups: ["User"]) {
	getContent(page: Int!): Contents!
	getContentById(movieId: Int!): Content!
	getWatchlist(email:String!): GetWatchlistResponse!
}

type WatchlistMutationResponse @aws_api_key
@aws_cognito_user_pools(cognito_groups: ["User"]){
	isSuccessful: Boolean!
}

type Mutation @aws_api_key
@aws_cognito_user_pools(cognito_groups: ["User"]) {
	deleteWatchlist(email:String!): WatchlistMutationResponse!
	updateWatchlist(movieId:Int!,email:String!): WatchlistMutationResponse!
}
                                            